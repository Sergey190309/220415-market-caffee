version: '3.9'
# project_name: deployment

services:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    image: nginx:dev
    container_name: nginx_dev
    restart: unless-stopped
    ports:
      - 80:80
      # - 443:443
    volumes:
      - ~/code/docker-logs/nginx/:/var/log/nginx/
    #   - nginxdata:/etc/ssl/private
    networks:
      - backend
      - frontend
    depends_on:
      - frontend
      - backend


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: frontend:dev
    container_name: frontend_dev
    restart: unless-stopped
    ports:
      - 3000:3000
      # - 443:443
    volumes:
      # - frontenddata:/etc/ssl/private
      # - ./frontend:/home/app
      - ./frontend:/app
      # - /app/node_modules
      # - nginxdata:/etc/nginx
      # - nginxlogs:/var/log/nginx
      # - /var/log/serverlogs/:/var/log/nginx
    depends_on:
      # - backend_serv
      - backend
    networks:
      - frontend


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    image: backend:dev
    container_name: backend_dev
    restart: unless-stopped

    networks:
      - backend
      - frontend

    expose:
      - 9090
    ports:
      - '9090:9090'

    # tty: true
    env_file:
      - ./backend/.env.dev

    volumes:
      - ./backend:/backend

    depends_on:
      - mysqldb


  mysqldb:
    image: mysql/mysql-server:8.0
    container_name: mysqldb_dev
    hostname: mysqldb
    command: ["mysqld", "--general-log=1", "--general-log-file=/var/lib/mysql/log/general-log.log"]
    restart: unless-stopped
    env_file:
      - ./.env.sql.dev

    volumes:
      - ~/code/docker-logs/mysql/:/var/lib/mysql/log/
      - 220415-market-caffee_mysqldata:/var/lib/mysql

    networks:
      - backend

    expose:
      - 3306
      - 33060
    # ports:
    #   - '3306:3306'


networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  220415-market-caffee_mysqldata:
    external: true
   # driver: local
  # backenddata:
  #   driver: local
  # nginxdata:
  #   driver: local
  # nginxlogs:
  #   driver: local
  frontenddata:
    driver: local