FROM python:3.10.6-slim-buster as pre_backend

EXPOSE 80/tcp
EXPOSE 443/tcp
# The below is convention
# RUN mkdir -p /usr/src
WORKDIR /backend

# set environment variables
# not sure, taken from
# https://testdriven.io/blog/dockerizing-flask-with-postgres-gunicorn-and-nginx/
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# update and upgrade the instance
RUN apt update && \
    apt -y upgrade && \
    apt install -y gcc libpcre3 libpcre3-dev

# install application used for productions
# RUN apt install -y python3-pip python3-dev build-essential libssl-dev libffi-dev python3-setuptools


# RUN pip install wheel

# update pip
RUN pip install -U pip

COPY requirements.txt /backend/

# install packages from local machine
RUN pip install --no-cache-dir -r requirements.txt

# instal packages for wsgi
RUN pip install --no-cache-dir uwsgi

# d build --rm -f Dockerfile.dev --target pre_backend -t backend:pre .
# --------------------------------------
FROM backend:pre AS backend_final
# Copy all project to working directory.
COPY . /backend/

EXPOSE 9090
# EXPOSE 8003/tcp

# ENTRYPOINT [ "python" ]
# CMD [ "app.py" ]

ENV FLASK_APP=run.py

# CMD ["flask", "run", "--host=0.0.0.0"]

CMD [ "uwsgi", "uwsgi.ini" ]

# command to build image:
# d build --rm -f Dockerfile.dev --target backend_final -t backend:dev .

# command to run image:
# d run --rm --name backend -it -p 3000:3000 -v $(pwd):/backend backend
